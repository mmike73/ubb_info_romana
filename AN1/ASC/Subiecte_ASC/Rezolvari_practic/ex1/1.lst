     1                                  bits 32
     2                                  global start
     3                                  extern exit, scanf, fopen, fclose, fprintf
     4                                  
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import fprintf msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 00000000                    nv dd 0
    13 00000004 256400                      formatnv db "%d", 0
    14                                      
    15 00000007 00000000                    nrvoc dd 0
    16 0000000B 6165696F7500                vocale db "aeiou", 0
    17 00000011 06000000                    lv dd $ - vocale
    18                                      
    19 00000015 00<rept>                    n times 101 db 0
    20 0000007A 257300                      format db "%s", 0
    21 0000007D 25730A00                    formato db "%s", 0xa, 0
    22                                      
    23 00000081 72657A756C7461742E-         nume_fisier db "rezultat.txt", 0
    23 0000008A 74787400           
    24 0000008E 7700                        mod_acces db "w", 0
    25                                      
    26 00000090 00000000                    descriptor dd 0
    27                                      
    28                                  segment code use32 class=code
    29                                  
    30                                  start:
    31 00000000 68[8E000000]                push mod_acces
    32 00000005 68[81000000]                push nume_fisier
    33 0000000A FF15[00000000]              call [fopen]
    34 00000010 A3[90000000]                mov [descriptor], eax
    35                                      
    36 00000015 68[00000000]                push nv
    37 0000001A 68[04000000]                push formatnv
    38 0000001F FF15[00000000]              call [scanf]
    39 00000025 83C408                      add esp, 4 * 2
    40                                      
    41                                      lp:
    42 00000028 68[15000000]                    push n
    43 0000002D 68[7A000000]                    push format
    44 00000032 FF15[00000000]                  call [scanf]
    45 00000038 83C408                          add esp, 4 * 2
    46                                          
    47 0000003B BE[15000000]                    mov esi, n
    48 00000040 C705[07000000]0000-             mov [nrvoc], dword 0
    48 00000048 0000               
    49                                          
    50                                          parc:
    51                                          
    52 0000004A BF[0B000000]                        mov edi, vocale
    53                                              comp:
    54                                              
    55 0000004F 803F00                                  cmp byte[edi], 0
    56 00000052 7438                                    je over
    57 00000054 8A1E                                    mov bl, byte[esi]
    58 00000056 3A1F                                    cmp bl, byte[edi]
    59 00000058 752F                                    jne no_good
    60 0000005A FF05[07000000]                              inc dword[nrvoc]
    61 00000060 8B1D[07000000]                              mov ebx, [nrvoc]
    62 00000066 3B1D[00000000]                              cmp ebx, [nv]
    63 0000006C 751B                                        jne inca_nu
    64 0000006E 68[15000000]                                push n
    65 00000073 68[7D000000]                                push formato
    66 00000078 FF35[90000000]                              push dword[descriptor]
    67 0000007E FF15[00000000]                              call [fprintf]
    68 00000084 83C40C                                      add esp, 4 * 3
    69 00000087 EB0B                                        jmp urm
    70                                                      inca_nu:
    71                                                  no_good:
    72                                                  
    73                                              
    74 00000089 47                                  inc edi
    75 0000008A EBC3                                jmp comp
    76                                              over:
    77                                          
    78 0000008C 803E00                          cmp byte[esi], 0
    79 0000008F 7403                            je urm
    80 00000091 46                              inc esi
    81 00000092 EBB6                            jmp parc
    82                                          
    83                                          urm:
    84 00000094 803D[15000000]23            cmp byte[n], '#'
    85 0000009B 7402                        je gata
    86 0000009D EB89                        jmp lp
    87                                      gata:
    88                                      
    89 0000009F FF35[90000000]              push dword[descriptor]
    90 000000A5 FF15[00000000]              call [fclose]
    91 000000AB 83C404                      add esp, 4 * 1
    92                                      
    93 000000AE 6A00                        push dword 0
    94 000000B0 FF15[00000000]              call [exit]
