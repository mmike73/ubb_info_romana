     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, fopen, fclose               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import scanf msvcrt.dll
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 00<rept>                nume_fisier times 100 db 0
    17 00000064 257300                  format_1 db "%s", 0
    18 00000067 256400                  format_2 db "%d", 0
    19 0000006A 256300                  format_3 db "%c", 0
    20 0000006D 00000000                n dd 0
    21 00000071 00000000                m dd 0
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 68[71000000]                    push m 
    26 00000005 68[6A000000]                    push format_3
    27 0000000A FF15[00000000]                  call [scanf]
    28 00000010 83C408                          add esp, 8
    29 00000013 68[00000000]                    push nume_fisier
    30 00000018 68[64000000]                    push format_1
    31 0000001D FF15[00000000]                  call [scanf]
    32 00000023 83C408                          add esp, 8
    33                                          
    34 00000026 68[6D000000]                    push n
    35 0000002B 68[67000000]                    push format_2
    36 00000030 FF15[00000000]                  call [scanf]
    37 00000036 83C408                          add esp, 8
    38                                          
    39                                          
    40                                          
    41 00000039 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 0000003B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
