     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10                                  
    11 00000000 072137132E                  s1 db  7, 33, 55, 19, 46
    12                                              
    13                                      len1 equ $-s1
    14                                      
    15 00000005 2115070D1B1337012E          s2 db 33, 21,  7, 13, 27, 19, 55, 1, 46   
    16                                      
    17                                      len2 equ $-s2   
    18                                      
    19 0000000E 00<rept>                    d times len2 db 0
    20                                      
    21 00000017 0102030405                  s3 db 1,2,3,4,5
    22                                          
    23                                      ;se cere in d pozitiile la care aar elementele din s2 in s1 sau 0 in ca contrar
    24                                      
    25                                  segment code use32 class=code
    26                                  
    27                                  start:
    28                                  
    29 00000000 B905000000                  mov ecx, len1 ;se va cicla de len ori
    30 00000005 E335                        jecxz final
    31                                      
    32 00000007 BE00000000                  mov esi, 0  ;index in s1
    33                                      
    34                                      outer_loop:
    35                                      ;ia fiecare element din primul vector si comapara elementele cu cele din al doilea
    36 0000000C 8A86[00000000]                  mov al, [s1 + esi]
    37 00000012 BF[05000000]                    mov edi, s2 ;index in s2 si d
    38 00000017 51                              push ecx
    39 00000018 B909000000                      mov ecx, len2
    40                                          repeta:
    41 0000001D AE                                  scasb
    42 0000001E 7516                                jne egal
    43 00000020 89FA                                    mov edx, edi
    44 00000022 81EA[05000000]                          sub edx, s2
    45                                                  
    46 00000028 4A                                      dec edx
    47 00000029 50                                      push eax
    48 0000002A 89F0                                    mov eax, esi
    49 0000002C FEC0                                    inc al
    50 0000002E 8882[0E000000]                          mov [edx + d], al
    51 00000034 58                                      pop eax
    52 00000035 47                                      inc edi
    53                                              egal:
    54                                              
    55 00000036 E2E5                                loop repeta
    56 00000038 59                              pop ecx
    57 00000039 46                              inc esi
    58 0000003A E2D0                        loop outer_loop
    59                                      
    60                                      final:
    61                                  
    62 0000003C 6A00                    push dword 0
    63 0000003E FF15[00000000]          call [exit]
