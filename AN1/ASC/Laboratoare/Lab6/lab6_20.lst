     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit,printf , scanf
     6                                  
     7                                  import exit msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12                                  
    13 00000000 616E6120636F6A6F63-         a db "ana cojoc ccc cc asd amma", 0
    13 00000009 206363632063632061-
    13 00000012 736420616D6D6100   
    14                                  
    15                                      len equ $ - a
    16 0000001A <res 0000001A>              b resb len
    17 00000034 [1A000000]                  sta dd b
    18 00000038 00000000                    l dd 0
    19 0000003C 00000000                    c_l dd 0
    20                                      
    21 00000040 437576696E74656C65-         format dd "Cuvintele palindrom sunt: %s", 0
    21 00000049 2070616C696E64726F-
    21 00000052 6D2073756E743A2025-
    21 0000005B 7300000000         
    22 00000060 7368697400                  shit db "shit", 0
    23                                      
    24                                  segment code use32 class=code
    25                                      start:
    26                                          
    27                                      ;Se da un sir de octeti reprezentand un text (succesiune de cuvinte separate de spatii). Sa se identifice cuvintele de tip palindrom (ale caror oglindiri sunt similare cu cele de plecare): "cojoc","capac" etc.
    28                                  
    29                                      
    30 00000000 BE[00000000]                mov esi, a
    31 00000005 BF[00000000]                mov edi, a
    32 0000000A B91A000000                  mov ecx, len
    33 0000000F E36E                        jecxz final
    34 00000011 83C101                      add ecx, 1
    35                                      
    36                                      parc:
    37 00000014 803F20                      cmp [edi], byte ' '
    38 00000017 750C                        jne litera
    39 00000019 4F                          dec edi
    40 0000001A E823000000                  call v_pal
    41 0000001F 83C702                      add edi, 2
    42 00000022 89FE                        mov esi, edi
    43 00000024 4F                          dec edi
    44                                      litera:
    45 00000025 47                          inc edi
    46 00000026 E2EC                        loop parc
    47 00000028 E815000000                  call v_pal
    48                                      
    49                                      
    50 0000002D 68[1A000000]                push b
    51 00000032 68[40000000]                push format
    52 00000037 FF15[00000000]              call [printf]
    53                                      
    54 0000003D 83C408                      add esp, 4 * 2
    55                                      
    56                                      
    57 00000040 EB3D                        jmp final
    58                                      
    59                                      v_pal: 
    60 00000042 57                          push edi
    61 00000043 51                          push ecx
    62 00000044 56                          push esi
    63                                      
    64 00000045 89F9                        mov ecx, edi
    65 00000047 29F1                        sub ecx, esi
    66 00000049 83C101                      add ecx, 1
    67 0000004C 890D[38000000]              mov [l], ecx
    68                                      ;cmp ecx, 1
    69                                      ;je pal 
    70                                      
    71 00000052 D1E9                        shr ecx, 1
    72                                      
    73                                      pal:
    74 00000054 A6                          cmpsb
    75 00000055 7524                        jne not_pal
    76 00000057 83EF02                      sub edi, 2
    77 0000005A E2F8                        loop pal
    78 0000005C 8B3D[34000000]              mov edi, [sta]
    79 00000062 5E                          pop esi
    80 00000063 56                          push esi
    81                                      
    82 00000064 8B0D[38000000]              mov ecx, [l]
    83                                      
    84                                      coppy:
    85 0000006A FC                          cld
    86 0000006B 8A06                        mov al, [esi]
    87 0000006D AA                          stosb 
    88 0000006E 46                          inc esi
    89 0000006F E2F9                        loop coppy
    90 00000071 C60720                      mov [edi], byte' '
    91 00000074 47                          inc edi
    92                                      
    93                                      
    94 00000075 893D[34000000]              mov [sta], edi
    95                                      
    96                                      not_pal:
    97                                      
    98                                      
    99 0000007B 5E                          pop esi
   100 0000007C 59                          pop ecx
   101 0000007D 5F                          pop edi
   102 0000007E C3                          ret
   103                                      final:
   104 0000007F 6A00                    push dword 0
   105 00000081 FF15[00000000]          call [exit]
