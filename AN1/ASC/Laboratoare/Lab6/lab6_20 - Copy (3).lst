     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit,printf , scanf
     6                                  
     7                                  import exit msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12                                  
    13 00000000 616E6120636F6A6F63-         a db "ana cojoc ccc cc asd amma ", 0
    13 00000009 206363632063632061-
    13 00000012 736420616D6D612000 
    14                                  
    15                                      len equ $ - a
    16 0000001B <res 0000001B>              b resb len
    17 00000036 [1B000000]                  sta dd b
    18 0000003A 00000000                    l dd 0
    19 0000003E 00000000                    c_l dd 0
    20                                      
    21 00000042 437576696E74656C65-         format dd "Cuvintele palindrom sunt: %s", 0
    21 0000004B 2070616C696E64726F-
    21 00000054 6D2073756E743A2025-
    21 0000005D 7300000000         
    22 00000062 7368697400                  shit db "shit", 0
    23                                      
    24                                  segment code use32 class=code
    25                                      start:
    26                                          
    27                                      ;Se da un sir de octeti reprezentand un text (succesiune de cuvinte separate de spatii). Sa se identifice cuvintele de tip palindrom (ale caror oglindiri sunt similare cu cele de plecare): "cojoc","capac" etc.
    28                                  
    29                                      
    30 00000000 BE[00000000]                mov esi, a
    31 00000005 BF[00000000]                mov edi, a
    32 0000000A B91B000000                  mov ecx, len
    33 0000000F E369                        jecxz final
    34 00000011 83C101                      add ecx, 1
    35                                      
    36                                      parc:
    37 00000014 803F20                      cmp [edi], byte ' '
    38 00000017 750C                        jne litera
    39 00000019 4F                          dec edi
    40 0000001A E81E000000                  call v_pal
    41 0000001F 83C702                      add edi, 2
    42 00000022 89FE                        mov esi, edi
    43 00000024 4F                          dec edi
    44                                      litera:
    45 00000025 47                          inc edi
    46 00000026 E2EC                        loop parc
    47                                      
    48                                      
    49 00000028 68[1B000000]                push b
    50 0000002D 68[42000000]                push format
    51 00000032 FF15[00000000]              call [printf]
    52                                      
    53 00000038 83C408                      add esp, 4 * 2
    54                                      
    55                                      
    56 0000003B EB3D                        jmp final
    57                                      
    58                                      v_pal: 
    59 0000003D 57                          push edi
    60 0000003E 51                          push ecx
    61 0000003F 56                          push esi
    62                                      
    63 00000040 89F9                        mov ecx, edi
    64 00000042 29F1                        sub ecx, esi
    65 00000044 83C101                      add ecx, 1
    66 00000047 890D[3A000000]              mov [l], ecx
    67                                      ;cmp ecx, 1
    68                                      ;je pal 
    69                                      
    70 0000004D D1E9                        shr ecx, 1
    71                                      
    72                                      pal:
    73 0000004F A6                          cmpsb
    74 00000050 7524                        jne not_pal
    75 00000052 83EF02                      sub edi, 2
    76 00000055 E2F8                        loop pal
    77 00000057 8B3D[36000000]              mov edi, [sta]
    78 0000005D 5E                          pop esi
    79 0000005E 56                          push esi
    80                                      
    81 0000005F 8B0D[3A000000]              mov ecx, [l]
    82                                      
    83                                      coppy:
    84 00000065 FC                          cld
    85 00000066 8A06                        mov al, [esi]
    86 00000068 AA                          stosb 
    87 00000069 46                          inc esi
    88 0000006A E2F9                        loop coppy
    89 0000006C C60720                      mov [edi], byte' '
    90 0000006F 47                          inc edi
    91                                      
    92                                      
    93 00000070 893D[36000000]              mov [sta], edi
    94                                      
    95                                      not_pal:
    96                                      
    97                                      
    98 00000076 5E                          pop esi
    99 00000077 59                          pop ecx
   100 00000078 5F                          pop edi
   101 00000079 C3                          ret
   102                                      final:
   103 0000007A 6A00                    push dword 0
   104 0000007C FF15[00000000]          call [exit]
