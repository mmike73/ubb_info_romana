     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 07                          c DB 7
    15 00000001 03                          a DB 3
    16 00000002 06                          b DB 6
    17 00000003 04                          d DB 4
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ;adunari, scader, vqriabile bytes
    23                                          ;1
    24 00000000 A0[00000000]                    mov AL, [c]
    25 00000005 8A15[01000000]                  mov DL, [a]
    26 0000000B 0215[03000000]                  add DL, [d]
    27 00000011 28D0                            sub AL, DL
    28 00000013 8A15[02000000]                  mov DL, [b]
    29 00000019 0215[03000000]                  add DL, [d]
    30 0000001F 00D0                            add AL, DL
    31                                          
    32                                          ;16
    33 00000021 A0[01000000]                    mov AL, [a]
    34 00000026 040D                            add AL, 13
    35 00000028 2A05[00000000]                  sub AL, [c]
    36 0000002E 0205[03000000]                  add AL, [d]
    37 00000034 2C07                            sub AL, 7
    38 00000036 0205[02000000]                  add AL, [b]
    39                                      
    40                                          ; exit(0)
    41 0000003C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 0000003E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
