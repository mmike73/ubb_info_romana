     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, printf
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10                                  
    11 00000000 257300                      format db "%s", 0
    12 00000003 256400                      format_d db "%d", 0
    13 00000006 256F0A00                    format_octal db "%o", 0xA, 0
    14 0000000A 00000000                    n dd 0
    15 0000000E 00<rept>                    s times 32 db 0
    16 0000002E 00000000                    rez dd 0
    17                                  
    18                                  segment code use32 class=code
    19                                  
    20                                  start:
    21 00000000 68[0A000000]                push n
    22 00000005 68[03000000]                push format_d
    23 0000000A FF15[00000000]              call [scanf]
    24 00000010 83C408                      add esp, 4 * 2
    25                                      
    26 00000013 8B0D[0A000000]              mov ecx, [n]
    27                                      rd:
    28 00000019 51                              push ecx
    29 0000001A 68[0E000000]                    push s
    30 0000001F 68[00000000]                    push format
    31 00000024 FF15[00000000]                  call [scanf]
    32 0000002A 83C408                          add esp, 4 * 2
    33                                          
    34                                          
    35 0000002D BB00000000                      mov ebx, 0
    36 00000032 FC                              cld
    37 00000033 B920000000                      mov ecx, 32
    38 00000038 BE[0E000000]                    mov esi, s
    39                                          
    40                                          load:
    41 0000003D AC                                  lodsb
    42                                              
    43 0000003E 3C00                                cmp al, 0
    44 00000040 7408                                je gata
    45 00000042 2C30                                sub al, 30h
    46 00000044 00C3                                add bl, al
    47 00000046 D1C3                                rol ebx, 1
    48                                          
    49 00000048 E2F3                            loop load
    50                                          gata:
    51 0000004A D1CB                            ror ebx, 1
    52                                          
    53                                          
    54 0000004C 891D[2E000000]                  mov [rez], ebx
    55                                          
    56                                          
    57 00000052 FF35[2E000000]                  push dword[rez]
    58 00000058 68[06000000]                    push format_octal
    59 0000005D FF15[00000000]                  call [printf]
    60 00000063 83C408                          add esp, 4 * 2
    61                                          
    62 00000066 59                              pop ecx
    63                                          
    64 00000067 E2B0                        loop rd
    65                                      
    66 00000069 6A00                        push dword 0
    67 0000006B FF15[00000000]              call [exit]
