     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, printf, fopen, fclose, fread
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import fread msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13                                  
    14 00000000 63617261637465725F-         nume_fisier db "caracter_special.txt", 0
    14 00000009 7370656369616C2E74-
    14 00000012 787400             
    15 00000015 00000000                    descriptor_fisier dd 0
    16 00000019 01000000                    sizee dd 1
    17 0000001D 64000000                    count dd 100
    18 00000021 7200                        mod_acces db "r", 0
    19 00000023 00<rept>                    s times 101 db 0
    20 00000088 00<rept>                    fr times 101 db 0
    21 000000ED 00000000                    len dd 0
    22 000000F1 00000000                    maxim dd 0
    23 000000F5 00                          cmax db 0
    24 000000F6 436172616374657275-         format db "Caracterul special %c a fost folost de %d ori.", 0
    24 000000FF 6C207370656369616C-
    24 00000108 202563206120666F73-
    24 00000111 7420666F6C6F737420-
    24 0000011A 6465202564206F7269-
    24 00000123 2E00               
    25                                  
    26                                  segment code use32 class=code
    27                                  start:
    28 00000000 68[21000000]                push mod_acces
    29 00000005 68[00000000]                push nume_fisier
    30 0000000A FF15[00000000]              call [fopen]
    31 00000010 83C408                      add esp, 4 * 2
    32 00000013 A3[15000000]                mov [descriptor_fisier], eax
    33                                      
    34                                      
    35                                      
    36                                      ;fread(adresa, size, count, file stream)
    37 00000018 FF35[15000000]              push dword[descriptor_fisier]
    38 0000001E FF35[1D000000]              push dword[count]
    39 00000024 FF35[19000000]              push dword[sizee]
    40 0000002A 68[23000000]                push s
    41 0000002F FF15[00000000]              call [fread]
    42 00000035 83C410                      add esp, 4 * 4
    43                                      
    44 00000038 A3[ED000000]                mov [len], eax
    45 0000003D 8B0D[ED000000]              mov ecx, [len]
    46 00000043 BE00000000                  mov esi, 0
    47                                      lp:
    48 00000048 8A86[23000000]                  mov al, [s + esi]
    49 0000004E 3C41                            cmp al, 'A'
    50 00000050 720C                            jb literaa
    51 00000052 3C7A                                cmp al, 'z'
    52 00000054 7708                                ja literaa
    53                                              
    54 00000056 3C61                                cmp al, 'a'
    55 00000058 7345                                jae litera
    56 0000005A 3C5A                                cmp al, 'Z'
    57 0000005C 7641                                jbe litera
    58                                              
    59                                          literaa:
    60 0000005E 8A96[88000000]                      mov dl, [fr + esi]
    61 00000064 80FA01                              cmp dl, 1
    62 00000067 7436                                je litera
    63 00000069 BA01000000                          mov edx, 1
    64 0000006E 56                                  push esi
    65                                                  
    66 0000006F 46                                      inc esi
    67                                                  li:
    68 00000070 3A86[23000000]                              cmp al, [s + esi]
    69 00000076 7508                                        jne not_eq
    70 00000078 42                                              inc edx
    71 00000079 C686[88000000]01                                mov byte[fr + esi], 1
    72                                                      not_eq:
    73 00000080 46                                          inc esi
    74 00000081 3B35[ED000000]                              cmp esi, [len]
    75 00000087 7302                                        jae gata
    76 00000089 EBE5                                    jmp li
    77                                              gata:
    78                                              
    79 0000008B 3B15[F1000000]                      cmp edx, [maxim]
    80 00000091 760B                                jbe nope
    81 00000093 8915[F1000000]                          mov [maxim], edx
    82 00000099 A2[F5000000]                            mov [cmax], al
    83                                              nope:            
    84 0000009E 5E                                  pop esi
    85                                          litera:
    86 0000009F 46                              inc esi
    87 000000A0 E2A6                        loop lp
    88                                      
    89 000000A2 FF35[F1000000]              push dword [maxim]
    90 000000A8 FF35[F5000000]              push dword [cmax]
    91 000000AE 68[F6000000]                push format
    92 000000B3 FF15[00000000]              call [printf]
    93 000000B9 83C40C                      add esp, 4 * 3
    94                                      
    95 000000BC 6A00                        push dword 0
    96 000000BE FF15[00000000]              call [exit]
    97                                      
    98                                      
