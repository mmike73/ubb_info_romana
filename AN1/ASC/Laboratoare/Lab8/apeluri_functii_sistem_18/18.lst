     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern printf, scanf, exit
     5                                  import printf msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10                                      
    11 00000000 00000000                    ab10 dd 0
    12 00000004 00000000                    ab16 dd 0
    13 00000008 00000000                    rez dd 0
    14 0000000C 496E74726F64752075-         mesaj1 db "Introdu un numar in baza 10 si unul in baza 16: ", 0
    14 00000015 6E206E756D61722069-
    14 0000001E 6E2062617A61203130-
    14 00000027 20736920756E756C20-
    14 00000030 696E2062617A612031-
    14 00000039 363A2000           
    15 0000003D 2564202578                  format1 db "%d %x"
    16 00000042 4E756D6172756C2064-         format2 db "Numarul de cifre 1 in scrierea binara a sumei este: %d", 0
    16 0000004B 652063696672652031-
    16 00000054 20696E207363726965-
    16 0000005D 7265612062696E6172-
    16 00000066 6120612073756D6569-
    16 0000006F 20657374653A202564-
    16 00000078 00                 
    17 00000079 <res 00000020>              rez_char resb 32
    18                                      
    19                                  segment code use32 class=code
    20                                      start:
    21                                      
    22 00000000 68[0C000000]                push mesaj1
    23 00000005 FF15[00000000]              call [printf]
    24 0000000B 83C404                      add esp, 4
    25                                      
    26 0000000E 68[00000000]                push dword ab10
    27 00000013 68[04000000]                push dword ab16
    28 00000018 68[3D000000]                push dword format1
    29 0000001D FF15[00000000]              call [scanf]
    30 00000023 83C40C                      add esp, 4 * 3
    31                                      
    32                                      
    33 00000026 B800000000                  mov eax, 0
    34 0000002B A1[00000000]                mov eax, [ab10]
    35 00000030 0305[04000000]              add eax, [ab16]
    36                                      
    37 00000036 A3[08000000]                mov [rez], eax
    38                                      
    39 0000003B EB00                        jmp convert_to_binary
    40                                      
    41                                      convert_to_binary:
    42 0000003D B920000000                      mov ecx, 32
    43 00000042 BB02000000                      mov ebx, 2
    44 00000047 A1[08000000]                    mov eax, [rez]
    45 0000004C 99                              cdq
    46 0000004D BF00000000                      mov edi, 0
    47 00000052 BE00000000                      mov esi, 0
    48                                          cv:
    49 00000057 83F800                              cmp eax, 0
    50 0000005A 7505                                jne nu_e_zero
    51 0000005C B901000000                              mov ecx, 1
    52                                              nu_e_zero:
    53 00000061 F7F3                                div ebx
    54 00000063 8897[79000000]                      mov [rez_char + edi], dl
    55 00000069 80FA01                              cmp dl, byte 1
    56 0000006C 7501                                jne not_eq
    57 0000006E 46                                      inc esi
    58                                              not_eq:
    59 0000006F 47                                  inc edi
    60 00000070 99                                  cdq
    61                                              
    62 00000071 E2E4                            loop cv
    63                                          
    64 00000073 56                              push esi
    65 00000074 68[42000000]                    push format2
    66 00000079 FF15[00000000]                  call [printf]
    67 0000007F 83C408                          add esp, 4 * 2 
    68                                      
    69 00000082 6A00                        push dword 0
    70 00000084 FF15[00000000]              call [exit]
    71                                      
    72                                      
    73                                      
