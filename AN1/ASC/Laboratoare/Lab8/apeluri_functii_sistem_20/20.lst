     1                                  bits 32
     2                                  global start
     3                                  extern scanf, printf, exit
     4                                  
     5                                  import scanf msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10                                  
    11 00000000 00000000                    a dd 0
    12 00000004 00000000                    b dd 0
    13 00000008 496E74726F64752032-         format_r db "Introdu 2 numere in baza 16: ",0
    13 00000011 206E756D6572652069-
    13 0000001A 6E2062617A61203136-
    13 00000023 3A2000             
    14 00000026 257820257800                format_rab db "%x %x",0
    15 0000002C 73756D61203D202578-         format_output_s db "suma = %x",0xa, 0
    15 00000035 0A00               
    16 00000037 6469666572656E7461-         format_output_d db "diferenta = %x",0
    16 00000040 203D20257800       
    17                                  
    18                                  segment code use32 class=code
    19                                  start:
    20 00000000 68[08000000]                push format_r
    21 00000005 FF15[00000000]              call [printf]
    22 0000000B 83C404                      add esp, 4
    23                                      
    24 0000000E 68[04000000]                push b
    25 00000013 68[00000000]                push a
    26 00000018 68[26000000]                push format_rab
    27 0000001D FF15[00000000]              call [scanf]
    28 00000023 83C40C                      add esp, 4 * 3
    29                                      
    30 00000026 B800000000                  mov eax, 0
    31 0000002B BB00000000                  mov ebx, 0
    32 00000030 66A1[00000000]              mov ax, word[a]
    33 00000036 668B1D[04000000]            mov bx, word[b]
    34 0000003D 6601D8                      add ax, bx
    35                                      
    36 00000040 50                          push eax
    37 00000041 68[2C000000]                push format_output_s
    38 00000046 FF15[00000000]              call [printf]
    39 0000004C 83C408                      add esp, 4 * 2
    40                                      
    41 0000004F A1[00000000]                mov eax, [a]
    42 00000054 8B1D[04000000]              mov ebx, [b]
    43 0000005A C1E810                      shr eax, 16
    44 0000005D C1EB10                      shr ebx, 16
    45 00000060 6601D8                      add ax, bx
    46                                      
    47 00000063 50                          push eax
    48 00000064 68[37000000]                push format_output_d
    49 00000069 FF15[00000000]              call [printf]
    50 0000006F 83C408                      add esp, 4 * 2
    51                                      
    52 00000072 6A00                        push dword 0
    53 00000074 FF15[00000000]              call [exit]
