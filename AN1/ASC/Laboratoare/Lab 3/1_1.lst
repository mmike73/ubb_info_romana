     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use 32 class==data
    10                                  
    11 00000000 2E                          a DB 2Eh
    12 00000001 AC19                        b DW 19ACh
    13 00000003 EEEEEE7E                    c DD 7EEEEEEEh
    14 00000007 7705000000000000            d DQ 577h
    15                                  
    16                                  segment code use 32 class==code
    17                                  
    18                                  ;c - ( a + d) + ( b + d)
    19                                  
    20                                  start:
    21 00000000 A1[03000000]                mov eax, [c]
    22 00000005 BA00000000                  mov edx, 0
    23                                      
    24                                      ;a + d
    25 0000000A 8B1D[07000000]              mov ebx, [d]
    26 00000010 8B0D[0B000000]              mov ecx, [d + 4]
    27                                      
    28 00000016 51                          push ecx
    29 00000017 F8                          clc
    30                                      
    31 00000018 B900000000                  mov ecx, 0
    32 0000001D 8A0D[00000000]              mov cl, [a]
    33                                      
    34 00000023 01CB                        add ebx, ecx
    35                                      
    36 00000025 59                          pop ecx
    37 00000026 83D100                      adc ecx, 0
    38                                      
    39                                      ;c - (a + d)
    40 00000029 F8                          clc
    41 0000002A 29D8                        sub eax, ebx
    42 0000002C 19CA                        sbb edx, ecx
    43                                      
    44                                      ;b + d
    45 0000002E 8B1D[07000000]              mov ebx, [d]
    46 00000034 8B0D[0B000000]              mov ecx, [d + 4]
    47                                      
    48 0000003A 51                          push ecx
    49 0000003B B900000000                  mov ecx, 0
    50 00000040 668B0D[01000000]            mov cx, [b]
    51                                      
    52 00000047 F8                          clc
    53 00000048 01CB                        add ebx, ecx
    54 0000004A 59                          pop ecx
    55 0000004B 83D100                      adc ecx, 0
    56                                      
    57                                      ;-(b + d) 
    58 0000004E F8                          clc
    59 0000004F 29D8                        sub eax, ebx
    60 00000051 19CA                        sbb edx, ecx
    61                                      
    62                                      
    63 00000053 6A00                        push dword 0
    64 00000055 FF15[00000000]              call [exit]
    65                                      
    66                                      
    67                                      
    68                                      
    69                                      
