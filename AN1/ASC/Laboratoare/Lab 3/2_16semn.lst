     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10                                  
    11 00000000 5634120000000000            x dq 123456h
    12 00000008 1200                        a dw 12h
    13 0000000A 1600                        c dw 16h
    14 0000000C 10                          b db 10h
    15 0000000D 14                          d db 14h
    16 0000000E 45000000                    e dd 45h
    17                                      
    18                                  
    19                                  segment code use32 class=code
    20                                  
    21                                  ;x/2+100*(a+b)-3/(c+d)+e*e
    22                                  start:
    23                                      ;x / 2
    24 00000000 A1[00000000]                mov eax, dword[x]
    25 00000005 8B15[04000000]              mov edx, dword[x+4]
    26 0000000B B902000000                  mov ecx, 2
    27 00000010 F7F9                        idiv ecx
    28                                      
    29 00000012 50                          push eax;x / 2
    30                                      
    31                                      ;100 * (a + b)
    32 00000013 B900000000                  mov ecx, 0
    33 00000018 668B0D[08000000]            mov cx, [a]
    34 0000001F 66BB0000                    mov bx, 0
    35 00000023 8A1D[0C000000]              mov bl, [b]
    36 00000029 6601D9                      add cx, bx
    37                                      
    38 0000002C 89C8                        mov eax, ecx
    39 0000002E 66B96400                    mov cx, 100
    40 00000032 66F7E9                      imul cx
    41                                      
    42 00000035 50                          push eax;100 * (a + b)
    43                                      
    44                                      ;3 / ( c + d)
    45                                      
    46 00000036 BB00000000                  mov ebx, 0
    47 0000003B 8A1D[0D000000]              mov bl, [d]
    48 00000041 66031D[0A000000]            add bx, [c]
    49                                      
    50 00000048 B803000000                  mov eax, 3
    51 0000004D F7FB                        idiv ebx
    52                                     
    53 0000004F 6650                        push ax;3 / ( c + d)
    54                                      
    55 00000051 A1[0E000000]                mov eax, [e]
    56 00000056 8B1D[0E000000]              mov ebx, [e]
    57 0000005C F7EB                        imul ebx
    58                                      
    59                                      ;grand total
    60 0000005E BB00000000                  mov ebx, 0
    61 00000063 665B                        pop bx
    62 00000065 29D8                        sub eax, ebx
    63 00000067 83DA00                      sbb edx, 0
    64                                      
    65 0000006A 5B                          pop ebx
    66 0000006B 01D8                        add eax, ebx
    67 0000006D 83D200                      adc edx, 0
    68                                      
    69 00000070 5B                          pop ebx
    70 00000071 01D8                        add eax, ebx
    71 00000073 83D000                      adc eax, 0
    72                                      
    73 00000076 6A00                    push dword 0
    74 00000078 FF15[00000000]          call[exit]
