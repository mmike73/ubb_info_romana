     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10                                  
    11 00000000 1000                        a dw 10h
    12 00000002 12                          b db 12h
    13 00000003 07000000                    c dd 7h
    14 00000007 0D00000000001000            x dq 1000000000000dh
    15                                      
    16                                  segment code use32 class=code
    17                                  
    18                                  start:
    19                                      ;(a * a + b + x) / (b * b) + c * c
    20                                      ;(a * a + b + x)
    21 00000000 B800000000                  mov eax, 0
    22 00000005 66A1[00000000]              mov ax, [a]
    23 0000000B 668B1D[00000000]            mov bx, [a]
    24 00000012 66F7EB                      imul bx
    25 00000015 BB00000000                  mov ebx, 0
    26 0000001A 8A1D[02000000]              mov bl, [b]
    27 00000020 01D8                        add eax, ebx
    28 00000022 BA00000000                  mov edx, 0
    29 00000027 83D200                      adc edx, 0
    30                                      
    31 0000002A 0305[07000000]              add eax, dword[x]
    32 00000030 1315[0B000000]              adc edx, dword[x + 4]
    33                                      
    34                                      
    35 00000036 50                          push eax
    36 00000037 52                          push edx
    37                                      
    38 00000038 A1[03000000]                mov eax, [c]
    39 0000003D F72D[03000000]              imul dword[c]
    40                                      
    41 00000043 89D8                        mov eax, ebx
    42 00000045 89CA                        mov edx, ecx
    43                                      
    44 00000047 5A                          pop edx
    45 00000048 58                          pop eax
    46                                      
    47 00000049 53                          push ebx
    48 0000004A 51                          push ecx
    49                                      
    50 0000004B BB00000000                  mov ebx, 0
    51 00000050 031D[02000000]              add ebx, [b]
    52 00000056 031D[02000000]              add ebx, [b]
    53                                      
    54 0000005C F7FB                        idiv ebx
    55                                      
    56 0000005E 5B                          pop ebx
    57 0000005F 01D8                        add eax, ebx
    58 00000061 83D200                      adc edx, 0
    59                                      
    60 00000064 6A00                    push dword 0
    61 00000066 FF15[00000000]          call [exit]
    62                                  
